//////////////
/*Бац Богдан*/
На цій практичній роботі я навчився створювати репозиторії, ознайомився з можливостями private репозиторію, а саме з кількістю можливих
співробітників в безкоштовні версії Github, навчився створювати проблеми, мітки, встановлюти відповідальних за них. Ознайомився зі
створенням проекту, а саме надання йому вбудованої автоматизації та налаштування її власноруч(для створення даного проекту та, думаю,
більшості краще використовувати Automated kanban, оскільки при вирішення проблеми сам переміщає в In progress, а не тільки при
перевідкритті проблеми, як Basic kanban). Навчився комітити файли одразу зі створенням папки. Вдарився в проблему створення відгалуження,
злиття pull requests з проблемою. Вирішив її такими кроками: 
1. При створенні файлу, наприклад, з назвою "Fixed #7" в Code, внизу вибираємо "Create a new branch for this commit and start a pull
request"
2. Там прописуємо місце, де і з якою назвою буде створена вітка. Наприклад, bob-byte/Create Fixed #7
3. Можна написати певний опис цього запиту, потім натискаємо "Create pull request"
4. ЛКМ на "Merge pull request"
5. Прописати "Close #7" 7-номер проблеми
6. Цикаємо на зелену кнопку
/*Yeah, baby*/
//////////////

Витвицька Олександра
На даній практичній роботі я навчилася працювати з командою над одним репозиторієї. Cтикнулася з пробемою відгалуженням та злиттям pull requests .Навчилася створювати теми для обговрення ,створювати папки в сховищі.Для вирішення своєї проблеми я скориставалася лецією та додатковими матеріалами.

/*Андріїв Надія*/
Я навчилась:
-створювати теми для обговорення,додавати позначки до них і додавати їх до проекту
-створювати папки в сховищі
-працювати в команді в github
Я зіткнулась з проблемою:
-відслідковування помилок, планування роботи
Я вирішила проблему:
-за допомгою лекції 4, де прочитала, що потрібно в Issues створити заголовок(пояснення мети),позначку(допомагає фільтрувати), етап(контейнер проблем, які потрібно вирішити), додати уповноваженого, коментар(спосіб обговорення)
